@using Microsoft.Extensions.Logging


@code {
    [Inject]
    ISubscriber<LogMessage> LogPipe { get; set; } = default!;
    private List<LogMessage> Logs { get; set; }
    [Inject]
    BAP.Types.ILogProvider LogProvider { get; set; } = default!;
    private LogLevel MinLogLevel { get; set; } = LogLevel.Information;
    [ParameterAttribute]
    public LogLevel? StartingLogLevel { get; set; }
    IDisposable subscriptions = default!;
    public int MinLogId { get; set; }

    protected override void OnParametersSet()
    {
        if (StartingLogLevel.HasValue)
        {
            MinLogLevel = (LogLevel)StartingLogLevel;
        }
    }
    protected override void OnInitialized()
    {
        var bag = DisposableBag.CreateBuilder();
        LogPipe.Subscribe(async (x) => await LogUpdate(x)).AddTo(bag);
        subscriptions = bag.Build();
        Logs = LogProvider.GetCurrentLogs().ToList();
    }
    async Task LogUpdate(LogMessage logMessage)
    {
        Logs.Add(logMessage);
        //IS this necessary?
        await InvokeAsync(() =>
        {
            StateHasChanged();
        });

    }
    void ClearLog(MouseEventArgs e)
    {
        Logs = new();
    }
}


<div style="margin-top:50px; height:400px;overflow-y:scroll">
    <h4>Logs</h4>
    <MudItem xs="12" sm="6" md="4">
        <MudSelect Label="Minimum Log Level" @bind-Value="MinLogLevel" HelperText="Log Level"
                   OffsetY="true" AdornmentColor="Color.Secondary">
            @foreach (LogLevel item in Enum.GetValues(typeof(LogLevel)))
            {
                <MudSelectItem Value="@item">@item</MudSelectItem>
            }
        </MudSelect>
        <MudButton OnClick=@ClearLog>Clear Log</MudButton>
    </MudItem>
    <ol>
        @foreach (var log in Enumerable.Reverse(Logs).Where(t => t.Level >= MinLogLevel))
        {
            <li>
                @if (log.Level == LogLevel.Error)
                {
                    <p style="color:red">@log.Message</p>
                }
                else if (log.Level == LogLevel.Information)
                {
                    <p style="color:green">@log.Message</p>
                }
                else
                {
                    <p>@log.Message</p>
                }
            </li>
        }
    </ol>
</div>