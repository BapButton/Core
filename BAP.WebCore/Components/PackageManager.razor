
@using Blazored.FluentValidation;
@using Microsoft.AspNetCore.Components.Forms

<h1>Install additional games or features</h1>

<h3>Download from Nuget</h3>
<MudList>
    @foreach (var package in NugetPackages)
    {
        <MudListItem>
            .
            <MudTooltip Text="@($"called {package.Description} - {package.Version}")">
                <MudText>@package.Name</MudText>
            </MudTooltip>
            <MudButton Disabled="@package.Downloading" OnClick="()=>InstallPackage(package.PackageId)" Variant="Variant.Filled" Color="Color.Primary">
                @if (package.Downloading)
                {
                    <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                    <MudText Class="ms-2">Installing</MudText>
                }
                else
                {
                    <MudText>Install</MudText>
                }
            </MudButton>
        </MudListItem>
    }

</MudList>
<h3>Current Packages</h3>
<MudList>
    @foreach (var package in CurrentPackages)
    {
        var name = $"{package.Id}";
        if (package.IsMarkedForDeletion)
        {
            name = $"{name} (Deleting)";
        }
        <MudListItem>
            <MudTooltip Text="@($"{package.Description} - {package.Version}")"><MudText>@name</MudText></MudTooltip>
            @if (package.IsNewPackageAvailable && package.IsMarkedForDeletion == false)
            {
                <MudButton Disabled="@package.IsUpdating" OnClick="()=>UpdatePackage(package.Id)" Variant="Variant.Filled" Color="Color.Primary">
                    @if (package.IsUpdating)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2">Updating</MudText>
                    }
                    else
                    {
                        <MudText>Update</MudText>
                    }
                </MudButton>
            }
        </MudListItem>
    }
</MudList>

<h3>Upload nuget packages</h3>

<EditForm EditContext="editContext" OnValidSubmit="OnSubmit">
    <div>
        <DataAnnotationsValidator />
        <FluentValidationValidator @ref="fluentValidationValidator" DisableAssemblyScanning="@true" />
        <div class="form-group">
            Nuget or Zip: <InputFile OnChange="OnChange" class="form-control" />
            <ValidationMessage For="() => packageUpload.Package" />
        </div>

        <button>Submit</button>
    </div>
</EditForm>


